<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="4" total="15" passed="11">
  <reporter-output>
  </reporter-output>
  <suite name="Default Suite" duration-ms="4825" started-at="2020-05-09T09:09:49Z" finished-at="2020-05-09T09:09:53Z">
    <groups>
      <group name="groupCorrect">
        <method signature="ADbCrudApplicationTestNG.getTimeSecTest()[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="getTimeSecTest" class="com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG"/>
        <method signature="ADbCrudApplicationTestNG.saveExperimentTest()[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="saveExperimentTest" class="com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG"/>
        <method signature="ADbCrudApplicationTestNG.editdsTest()[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="editdsTest" class="com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG"/>
        <method signature="ADbCrudApplicationTestNG.viewNotebookTest()[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="viewNotebookTest" class="com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG"/>
        <method signature="ADbCrudApplicationTestNG.queryExperimentsByDateTest()[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="queryExperimentsByDateTest" class="com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG"/>
        <method signature="ADbCrudApplicationTestNG.listDataSourceTest()[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="listDataSourceTest" class="com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG"/>
        <method signature="ADbCrudApplicationTestNG.editnotebooksTest()[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="editnotebooksTest" class="com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG"/>
        <method signature="ADbCrudApplicationTestNG.deletenotebooksTest()[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="deletenotebooksTest" class="com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG"/>
        <method signature="ADbCrudApplicationTestNG.savedsTest()[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="savedsTest" class="com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG"/>
        <method signature="ADbCrudApplicationTestNG.createnotebooksTest()[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="createnotebooksTest" class="com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG"/>
        <method signature="ADbCrudApplicationTestNG.editComputeTest()[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="editComputeTest" class="com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG"/>
        <method signature="ADbCrudApplicationTestNG.deletedsTest()[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="deletedsTest" class="com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG"/>
        <method signature="ADbCrudApplicationTestNG.deleteComputeTest()[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="deleteComputeTest" class="com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG"/>
        <method signature="ADbCrudApplicationTestNG.queryComputersTest()[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="queryComputersTest" class="com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG"/>
        <method signature="ADbCrudApplicationTestNG.saveComputeTest()[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="saveComputeTest" class="com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG"/>
      </group> <!-- groupCorrect -->
    </groups>
    <test name="arangodb-crud-mutitenancy" duration-ms="4825" started-at="2020-05-09T09:09:49Z" finished-at="2020-05-09T09:09:53Z">
      <class name="com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="13" started-at="2020-05-09T17:09:49Z" finished-at="2020-05-09T17:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="4087" started-at="2020-05-09T17:09:49Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2020-05-09T17:09:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="setup" is-config="true" duration-ms="1" started-at="2020-05-09T17:09:53Z" finished-at="2020-05-09T17:09:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="2" started-at="2020-05-09T17:09:53Z" finished-at="2020-05-09T17:09:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[void com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG.queryComputersTest() throws java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="queryComputersTest()[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="queryComputersTest" duration-ms="127" started-at="2020-05-09T17:09:53Z" finished-at="2020-05-09T17:09:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queryComputersTest -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="2" started-at="2020-05-09T17:09:53Z" finished-at="2020-05-09T17:09:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[void com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG.queryComputersTest() throws java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2020-05-09T17:09:53Z" finished-at="2020-05-09T17:09:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[void com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG.listDataSourceTest() throws java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="listDataSourceTest()[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="listDataSourceTest" duration-ms="35" started-at="2020-05-09T17:09:53Z" finished-at="2020-05-09T17:09:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listDataSourceTest -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2020-05-09T17:09:53Z" finished-at="2020-05-09T17:09:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[void com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG.listDataSourceTest() throws java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2020-05-09T17:09:53Z" finished-at="2020-05-09T17:09:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[void com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG.viewNotebookTest() throws java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="viewNotebookTest()[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="viewNotebookTest" duration-ms="37" started-at="2020-05-09T17:09:53Z" finished-at="2020-05-09T17:09:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewNotebookTest -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2020-05-09T17:09:53Z" finished-at="2020-05-09T17:09:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[void com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG.viewNotebookTest() throws java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2020-05-09T17:09:53Z" finished-at="2020-05-09T17:09:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[void com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG.queryExperimentsByDateTest() throws java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="queryExperimentsByDateTest()[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="queryExperimentsByDateTest" duration-ms="39" started-at="2020-05-09T17:09:53Z" finished-at="2020-05-09T17:09:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- queryExperimentsByDateTest -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2020-05-09T17:09:53Z" finished-at="2020-05-09T17:09:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[void com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG.queryExperimentsByDateTest() throws java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2020-05-09T17:09:53Z" finished-at="2020-05-09T17:09:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[void com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG.getTimeSecTest() throws java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2020-05-09T17:09:53Z" finished-at="2020-05-09T17:09:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[void com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG.getTimeSecTest() throws java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="getTimeSecTest()[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="getTimeSecTest" duration-ms="0" started-at="2020-05-09T17:09:53Z" finished-at="2020-05-09T17:09:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTimeSecTest -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2020-05-09T17:09:53Z" finished-at="2020-05-09T17:09:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[void com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG.savedsTest() throws java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="savedsTest()[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="savedsTest" duration-ms="37" started-at="2020-05-09T17:09:53Z" finished-at="2020-05-09T17:09:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- savedsTest -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2020-05-09T17:09:53Z" finished-at="2020-05-09T17:09:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[void com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG.createnotebooksTest() throws java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2020-05-09T17:09:53Z" finished-at="2020-05-09T17:09:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[void com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG.savedsTest() throws java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="createnotebooksTest()[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="createnotebooksTest" duration-ms="147" started-at="2020-05-09T17:09:53Z" finished-at="2020-05-09T17:09:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createnotebooksTest -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2020-05-09T17:09:53Z" finished-at="2020-05-09T17:09:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[void com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG.createnotebooksTest() throws java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="saveComputeTest()[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="saveComputeTest" duration-ms="33" started-at="2020-05-09T17:09:53Z" finished-at="2020-05-09T17:09:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- saveComputeTest -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2020-05-09T17:09:53Z" finished-at="2020-05-09T17:09:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[void com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG.saveComputeTest() throws java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2020-05-09T17:09:53Z" finished-at="2020-05-09T17:09:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[void com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG.editdsTest() throws java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2020-05-09T17:09:53Z" finished-at="2020-05-09T17:09:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[void com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG.saveComputeTest() throws java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="FAIL" signature="editdsTest()[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="editdsTest" duration-ms="39" started-at="2020-05-09T17:09:53Z" finished-at="2020-05-09T17:09:53Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [success] but found [failed]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [success] but found [failed]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:165)
	at com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG.editdsTest(ADbCrudApplicationTestNG.java:171)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:73)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editdsTest -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2020-05-09T17:09:53Z" finished-at="2020-05-09T17:09:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[void com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG.editdsTest() throws java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2020-05-09T17:09:53Z" finished-at="2020-05-09T17:09:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[void com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG.editnotebooksTest() throws java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="editnotebooksTest()[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="editnotebooksTest" duration-ms="1" started-at="2020-05-09T17:09:53Z" finished-at="2020-05-09T17:09:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editnotebooksTest -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="3" started-at="2020-05-09T17:09:53Z" finished-at="2020-05-09T17:09:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[void com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG.editnotebooksTest() throws java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2020-05-09T17:09:53Z" finished-at="2020-05-09T17:09:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[void com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG.deletenotebooksTest() throws java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="deletenotebooksTest()[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="deletenotebooksTest" duration-ms="49" started-at="2020-05-09T17:09:53Z" finished-at="2020-05-09T17:09:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deletenotebooksTest -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2020-05-09T17:09:53Z" finished-at="2020-05-09T17:09:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[void com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG.deletenotebooksTest() throws java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="FAIL" signature="editComputeTest()[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="editComputeTest" duration-ms="36" started-at="2020-05-09T17:09:53Z" finished-at="2020-05-09T17:09:53Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [success] but found [failed]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [success] but found [failed]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:165)
	at com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG.editComputeTest(ADbCrudApplicationTestNG.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:73)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editComputeTest -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2020-05-09T17:09:53Z" finished-at="2020-05-09T17:09:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[void com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG.editComputeTest() throws java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2020-05-09T17:09:53Z" finished-at="2020-05-09T17:09:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[void com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG.editComputeTest() throws java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="FAIL" signature="deletedsTest()[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="deletedsTest" duration-ms="35" started-at="2020-05-09T17:09:53Z" finished-at="2020-05-09T17:09:53Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [success] but found [failed]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [success] but found [failed]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:165)
	at com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG.deletedsTest(ADbCrudApplicationTestNG.java:176)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:73)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deletedsTest -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2020-05-09T17:09:53Z" finished-at="2020-05-09T17:09:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[void com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG.deletedsTest() throws java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2020-05-09T17:09:53Z" finished-at="2020-05-09T17:09:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[void com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG.deletedsTest() throws java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2020-05-09T17:09:53Z" finished-at="2020-05-09T17:09:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[void com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG.deleteComputeTest() throws java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="FAIL" signature="deleteComputeTest()[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="deleteComputeTest" duration-ms="34" started-at="2020-05-09T17:09:53Z" finished-at="2020-05-09T17:09:53Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [success] but found [failed]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [success] but found [failed]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:165)
	at com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG.deleteComputeTest(ADbCrudApplicationTestNG.java:146)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:73)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteComputeTest -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2020-05-09T17:09:53Z" finished-at="2020-05-09T17:09:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[void com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG.deleteComputeTest() throws java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="4" started-at="2020-05-09T17:09:53Z" finished-at="2020-05-09T17:09:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[void com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG.saveExperimentTest() throws java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="saveExperimentTest()[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="saveExperimentTest" duration-ms="34" started-at="2020-05-09T17:09:53Z" depends-on-methods="com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG.getTimeSecTest" finished-at="2020-05-09T17:09:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- saveExperimentTest -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2020-05-09T17:09:53Z" finished-at="2020-05-09T17:09:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[void com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG.saveExperimentTest() throws java.sql.SQLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG@2767e23c]" name="springTestContextAfterTestClass" is-config="true" duration-ms="1" started-at="2020-05-09T17:09:53Z" finished-at="2020-05-09T17:09:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- com.bigdata.springboot.arangodbcrud.ADbCrudApplicationTestNG -->
    </test> <!-- arangodb-crud-mutitenancy -->
  </suite> <!-- Default Suite -->
</testng-results>
